<?xml version="1.0" encoding="utf-8" ?>
<TrustFrameworkPolicy
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
  PolicySchemaVersion="0.3.0.0"
  TenantId="identitysamplesb2c.onmicrosoft.com"
  PolicyId="B2C_1A_TrustFrameworkExtensions"
  PublicPolicyUri="http://identitysamplesb2c.onmicrosoft.com/B2C_1A_TrustFrameworkExtensions">

  ......
  ......

  <ClaimsProviders>
    .....
    .....
    <ClaimsProvider>
      <DisplayName>SAML Token Issuer</DisplayName>
      <TechnicalProfiles>
        <!-- SAML Token Issuer technical profile -->
        <TechnicalProfile Id="Saml2AssertionIssuer">
          .....
          .....
          <CryptographicKeys>
            <Key Id="MetadataSigning" StorageReferenceId="B2C_1A_SamlAppB2C" />
            <Key Id="SamlMessageSigning" StorageReferenceId="B2C_1A_SamlAppB2C" />
            <Key Id="SamlAssertionSigning" StorageReferenceId="B2C_1A_SamlAppB2C" />
            <!--
              The SamlAssertionDecryption key is needed in order for AAD B2C to issue encrypted SAML assertions - even though it technically doesn't need any decryption key
              as this is only required when it's acting as a Service Provider towards a SAML IdP which has encrypted *incoming* assertions; in this case AAD B2C is acting
              as an IdP itself that needs to issue encrypted tokens towards the Service Provider (client application).
            -->
            <Key Id="SamlAssertionDecryption" StorageReferenceId="B2C_1A_SamlAppB2C" />
          </CryptographicKeys>
          .....
          .....
        </TechnicalProfile>
        ......
        ......
      </TechnicalProfiles>
    </ClaimsProvider>
  </ClaimsProviders>
  
  .....

</TrustFrameworkPolicy>
